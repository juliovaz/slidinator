<?xml version="1.0" encoding="utf-8"?><project name="org.slidinator.pptx" default="dita2pptx">
  
	<!-- Controls debugging within the XSLTs. Set to "true" to turn on debugging: -->
	<property name="debug" value="false"></property>
  
  
	
	<target name="dita2pptx" unless="noMap" depends="build-init,preprocess,pptx">
  </target>
  
  <target name="pptx" unless="noMap" depends="dita.map.pptx"></target>
	  
    
  <target name="dita.map.slideset.init" description="Init properties for slideset">
    <basename property="dita.map.toc.root" file="${dita.input.filename}" suffix=".ditamap"></basename>
    <condition property="args.slideset.toc" value="${dita.map.toc.root}">
      <not>
        <isset property="args.slideset.toc"></isset>
      </not>
    </condition>
    <condition property="slideset.temp.dir" value="${dita.temp.dir}/slideset-temp">
      <not>
        <isset property="slideset.temp.dir"></isset>
      </not>
    </condition>
    <condition property="slideset.output.format" value=".xml">
      <not>
        <isset property="slideset.output.format"></isset>
      </not>
    </condition>
    <condition property="out.ext" value=".xml">
      <not>
        <isset property="out.ext"></isset>
      </not>
    </condition>
    <condition property="noPlugin">
      <equals arg1="${dita.slideset.plugin}" arg2="no"></equals>
    </condition>


  </target>
  

  <target name="slideset.generate.slidesetml">
  	<mkdir dir="${slideset.temp.dir}"></mkdir>
  	<makeurl file="${slideset.temp.dir}" property="slideset.xslt.outdir"></makeurl>
  	<makeurl file="${dita.temp.dir}" property="slideset.xslt.tempdir"></makeurl>
  	
  	<property name="map2slideset.style" location="${dita.plugin.org.slidinator.pptx.dir}/xsl/map2slideset.xsl"></property>
		<property name="slideset.result.filename" value="${dita.map.filename.root}.${slideset.output.format}"></property>
    
    <xslt processor="trax" basedir="${dita.temp.dir}" destdir="${dita.map.output.dir}" extension=".xml" out="${dita.map.output.dir}/${dita.map.filename.root}.xml" includesfile="${dita.temp.dir}${file.separator}fullditamap.list" classpathref="dost.class.path" style="${map2slideset.style}">
  		<param name="debug" expression="${debug}"></param>
  		<param name="tempdir" expression="${slideset.xslt.tempdir}"></param>
  		<param name="outdir" expression="${slideset.xslt.outdir}"></param>
  		<param name="rawPlatformString" expression="${os.name}"></param>
  		
  		<!-- Parameters from dita2xhtml and similar transtypes: -->   
  		<param name="WORKDIR" expression="${workdir}" if="workdir"></param>
  		<param name="DRAFT" expression="${args.draft}" if="args.draft"></param>
  		<param name="ARTLBL" expression="${args.artlbl}" if="args.artlbl"></param>
  		<param name="OUTPUTDIR" expression="${slideset.xslt.outdir}"></param>
      <xmlcatalog refid="dita.catalog"></xmlcatalog>
    </xslt>
    
  </target>
	 
	
  <target name="slideset.generate.pptx" depends="dita.map.slideset.init,              slideset.generate.slidesetml,             slideset.copy.graphics               ">
    <condition property="args.slidinator.base.pptx" value="${dita.plugin.org.slidinator.pptx.dir}/resources/pptx/generic-presentation.pptx">
      <not>
        <isset property="args.slidinator.base.pptx"></isset>
      </not>
    </condition>
    
    
    <java classname="org.slidinator.slideset.SlideSet2PPTX">
      <!-- NOTE: The input is the output of the slideset.generate.slidesetml target. -->
      <arg line="-i ${dita.map.output.dir}/${dita.map.filename.root}.xml"></arg>
      <arg line="-b ${args.slidinator.base.pptx}"></arg>
      <arg line="-o ${dita.map.output.dir}/${dita.map.filename.root}.pptx"></arg>
      <arg line="-otdir ${dita.dir}"></arg>
      <classpath>
        <pathelement location="${dita.plugin.org.slidinator.pptx.dir}/lib/dita2slideset-app.jar"></pathelement>
        <pathelement path="${dost.class.path}"></pathelement>
      </classpath>
    </java>
  </target>
  
  <target name="dita.map.pptx" depends="slideset.generate.pptx" description="Generate slideset data files and PPTX from the input map">
  	
   <!-- All work is done by dependency targets -->
  </target>
  
  <target name="slideset.copy.graphics" depends="slidinator.generate.copy.task" description="Copies graphics from input to the slideset output directory based on the graphic map generated during slideset generation">
  	<condition property="isCopyGraphics">
     <available file="${slideset.temp.dir}/copy-graphics.xml"></available>
    </condition>
  	<ant antfile="${slideset.temp.dir}/copy-graphics.xml">
  	</ant>
	</target>
  
  <target name="slidinator.generate.copy.task" depends="slidinator.generate.graphicMap">
    
    <property name="map2antcopy.style" location="${dita.plugin.org.dita4publishers.common.xslt.dir}/xsl/graphicMap2AntCopyScript.xsl"></property>
    <property name="osvalue" value="${os.name}"></property>
    <property name="output" location="${slideset.temp.dir}"></property>
    
    <xslt processor="trax" basedir="${dita.input.dirname}" destdir="${dita.temp.dir}" extension=".xml" out="${slideset.temp.dir}/copy-graphics.xml" in="${slideset.temp.dir}/graphicmap.xml" classpathref="dost.class.path" style="${map2antcopy.style}">
      <param name="debug" expression="${debug}"></param>
      <param name="tempdir" expression="${dita.temp.dir}"></param>
      <param name="outdir" expression="${output}"></param>
      <param name="rawPlatformString" expression="${os.name}"></param>
      
      <!-- Parameters from dita2xhtml and similar transtypes: -->   
      <param name="WORKDIR" expression="${workdir}" if="workdir"></param>
      <param name="DRAFT" expression="${args.draft}" if="args.draft"></param>
      <param name="ARTLBL" expression="${args.artlbl}" if="args.artlbl"></param>
      <param name="OUTPUTDIR" expression="${slideset.xslt.outdir}"></param>
      <xmlcatalog refid="dita.catalog"></xmlcatalog>
      
    </xslt>
  </target>
  
  <target name="slidinator.generate.graphicMap">
    
    <property name="map2graphicmap.style" location="${dita.plugin.org.dita4publishers.common.xslt.dir}/xsl/map2graphicMap.xsl"></property>
    <property name="osvalue" value="${os.name}"></property>
    <property name="output" location="${slideset.temp.dir}"></property>
    <property name="filters" value="${args.filter}"></property>
    <property name="graphicPath" value="${dita.temp.dir}"></property>
    
    <xslt processor="trax" basedir="${dita.input.dirname}" extension=".xml" out="${slideset.temp.dir}/graphicmap.xml" in="${dita.temp.dir}${file.separator}${dita.input.filename}" classpathref="dost.class.path" style="${map2graphicmap.style}">
      <param name="debug" expression="${debug}"></param>
      <param name="tempdir" expression="${dita.temp.dir}"></param>
      <param name="outdir" expression="${output}"></param>
      <param name="rawPlatformString" expression="${os.name}"></param>
      <param name="filterdoc" expression="${filters}"></param>
      
      <!-- Parameters from dita2xhtml and similar transtypes: -->   
      <param name="WORKDIR" expression="${workdir}" if="workdir"></param>
      <param name="DRAFT" expression="${args.draft}" if="args.draft"></param>
      <param name="ARTLBL" expression="${args.artlbl}" if="args.artlbl"></param>
      <param name="OUTPUTDIR" expression="${slideset.xslt.outdir}"></param>
      <param name="imagesOutputPath" expression="file:${file.separator}${graphicPath}"></param>
      <xmlcatalog refid="dita.catalog"></xmlcatalog>
      
    </xslt>
  </target>
  
</project>